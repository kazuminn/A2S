package main

import (
    "fmt"
    "go/ast"
    "go/parser"
    "go/token"
    "go/types"
    "go/importer"
    "golang.org/x/tools/go/ssa/ssautil"
    "golang.org/x/tools/go/ssa"
    "os"

    "github.com/k0kubun/pp"
)

func main() {
    fset := token.NewFileSet()
    f, err := parser.ParseFile(fset, "C:\\Users\\warug\\a2s\\sample\\sample.go", nil, parser.Mode(0))
    if err != nil {
	fmt.Println(err)
    }

	files := []*ast.File{f}

	// Create the type-checker's package.
	pkg := types.NewPackage("hello", "")

	// Type-check the package, load dependencies.
	// Create and build the SSA program.
	hello, _, err := ssautil.BuildPackage(
		&types.Config{Importer: importer.Default()}, fset, pkg, files, ssa.SanityCheckFunctions)
	if err != nil {
		fmt.Print(err) // type error in some package
		return
	}

	// Print out the package.
	fmt.Printf("%#v", hello.Func("add").Blocks)

	fmt.Printf("-----------------------------------------")

	hello.WriteTo(os.Stdout)

    for _, d := range f.Decls {
        ast.Print(fset, d)
    }
}
